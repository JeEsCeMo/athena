"""initial migration

Revision ID: da848d3ab88b
Revises: 
Create Date: 2024-09-19 00:28:02.594307

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'da848d3ab88b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('permissions')
    op.drop_table('role_permissions')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_constraint('fk_role', type_='foreignkey')
        batch_op.create_foreign_key(None, 'roles', ['rol_id'], ['rol_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_role', 'roles', ['rol_id'], ['rol_id'], ondelete='CASCADE')
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    op.create_table('role_permissions',
    sa.Column('role_permission_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rol_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.permission_id'], name='fk_role_permission_permission', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rol_id'], ['roles.rol_id'], name='fk_role_permission_role', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_permission_id', name='role_permissions_pkey')
    )
    op.create_table('permissions',
    sa.Column('permission_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('methods', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('permission_id', name='permissions_pkey')
    )
    # ### end Alembic commands ###
